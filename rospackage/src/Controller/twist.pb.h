/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.6-dev */

#ifndef PB_TWIST_PB_H_INCLUDED
#define PB_TWIST_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _Twist { 
    float lx; 
    float az; 
} Twist;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define Twist_init_default                       {0, 0}
#define Twist_init_zero                          {0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define Twist_lx_tag                             1
#define Twist_az_tag                             2

/* Struct field encoding specification for nanopb */
#define Twist_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, FLOAT,    lx,                1) \
X(a, STATIC,   REQUIRED, FLOAT,    az,                2)
#define Twist_CALLBACK NULL
#define Twist_DEFAULT NULL

extern const pb_msgdesc_t Twist_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Twist_fields &Twist_msg

/* Maximum encoded size of messages (where known) */
#define Twist_size                               10

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
