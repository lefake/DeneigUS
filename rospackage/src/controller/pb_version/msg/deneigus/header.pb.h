/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.5 */

#ifndef PB_HEADER_PB_H_INCLUDED
#define PB_HEADER_PB_H_INCLUDED
#include <pb.h>
#include "time.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _Header { 
    uint32_t seq; 
    bool has_stamp;
    Time stamp; 
    char frame_id[50]; 
} Header;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define Header_init_default                      {0, false, Time_init_default, ""}
#define Header_init_zero                         {0, false, Time_init_zero, ""}

/* Field tags (for use in manual encoding/decoding) */
#define Header_seq_tag                           1
#define Header_stamp_tag                         2
#define Header_frame_id_tag                      3

/* Struct field encoding specification for nanopb */
#define Header_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   seq,               1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  stamp,             2) \
X(a, STATIC,   SINGULAR, STRING,   frame_id,          3)
#define Header_CALLBACK NULL
#define Header_DEFAULT NULL
#define Header_stamp_MSGTYPE Time

extern const pb_msgdesc_t Header_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Header_fields &Header_msg

/* Maximum encoded size of messages (where known) */
#if defined(Time_size)
#define Header_size                              (63 + Time_size)
#endif

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
