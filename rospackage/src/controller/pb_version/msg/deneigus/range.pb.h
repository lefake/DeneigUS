/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.5 */

#ifndef PB_RANGE_PB_H_INCLUDED
#define PB_RANGE_PB_H_INCLUDED
#include <pb.h>
#include "header.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _Range { 
    bool has_header;
    Header header; 
    float field_of_view; 
    float min_range; 
    float max_range; 
    float range; 
} Range;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define Range_init_default                       {false, Header_init_default, 0, 0, 0, 0}
#define Range_init_zero                          {false, Header_init_zero, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define Range_header_tag                         1
#define Range_field_of_view_tag                  2
#define Range_min_range_tag                      3
#define Range_max_range_tag                      4
#define Range_range_tag                          5

/* Struct field encoding specification for nanopb */
#define Range_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  header,            1) \
X(a, STATIC,   SINGULAR, FLOAT,    field_of_view,     2) \
X(a, STATIC,   SINGULAR, FLOAT,    min_range,         3) \
X(a, STATIC,   SINGULAR, FLOAT,    max_range,         4) \
X(a, STATIC,   SINGULAR, FLOAT,    range,             5)
#define Range_CALLBACK NULL
#define Range_DEFAULT NULL
#define Range_header_MSGTYPE Header

extern const pb_msgdesc_t Range_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Range_fields &Range_msg

/* Maximum encoded size of messages (where known) */
#if defined(Header_size)
#define Range_size                               (26 + Header_size)
#endif

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
