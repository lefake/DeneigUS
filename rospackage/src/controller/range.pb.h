/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.6-dev */

#ifndef PB_RANGE_PB_H_INCLUDED
#define PB_RANGE_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _Range { 
    uint32_t seq; 
    char frame_id[50]; 
    float range; 
} Range;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define Range_init_default                       {0, "", 0}
#define Range_init_zero                          {0, "", 0}

/* Field tags (for use in manual encoding/decoding) */
#define Range_seq_tag                            1
#define Range_frame_id_tag                       2
#define Range_range_tag                          3

/* Struct field encoding specification for nanopb */
#define Range_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   seq,               1) \
X(a, STATIC,   REQUIRED, STRING,   frame_id,          2) \
X(a, STATIC,   REQUIRED, FLOAT,    range,             3)
#define Range_CALLBACK NULL
#define Range_DEFAULT NULL

extern const pb_msgdesc_t Range_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Range_fields &Range_msg

/* Maximum encoded size of messages (where known) */
#define Range_size                               62

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
