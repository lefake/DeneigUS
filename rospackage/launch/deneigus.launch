<launch>
  <arg name="has_web" default="0"/>
  <arg name="has_joy" default="1"/>
  <arg name="has_ard" default="0"/>
  
  <arg name="joy_port" default="/dev/input/js2" />
  
  <arg name="map_file" default="$(find deneigus)/map/map.yaml"/>
  <arg name="rviz_file" default="-d $(find deneigus)/rviz/simulations.rviz"/>

  <param name="/use_sime_time" value="true"/>

  <!-- rosbridge server -->
  <group if="$(arg has_web)">
    <include file="$(find rosbridge_server)/launch/rosbridge_websocket.launch" > 
      <arg name="port" value="9090"/>
      <arg name="output" value="log"/>
    </include>
  </group>

 <!-- python executif Node -->
  <node pkg="deneigus" type="executif.py" name="executif" output="screen"/>

  <!-- python sonar2pc Node -->
  <node pkg="deneigus" type="sonar2pc.py" name="sonar2pc" output="screen"/>

  <!-- python transformOdomMsg Node -->
  <node pkg="deneigus" type="transformOdomMsg.py" name="transformOdomMsg" output="screen"/>

 <!-- python pb2ros Node -->
  <group if="$(arg has_ard)">
    <node pkg="deneigus" type="pb2ros.py" name="pb2ros" output="screen"/>
  </group>

 <!-- python astar node -->
  <node pkg="deneigus" type="astar.py" name="astar" output="screen"/>

<!-- python tf_listener node -->
<!--  <node pkg="deneigus" type="tf_listener.py" name="tf_listner" output="screen"/> -->

<!-- Run the map server -->
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />

<!-- joy node -->
  <group if="$(arg has_joy)">
    <node respawn="true" pkg="joy" type="joy_node" name="raw_joy">
      <param name="dev" type="string" value="$(arg joy_port)" />
      <param name="deadzone" value="0.12" />
    </node>
  </group>

<!-- RVIZ -->
  <node type="rviz" name="rviz" pkg="rviz" args="$(arg rviz_file)"/>	

<!-- Static TF -->
<node pkg="tf2_ros" type="static_transform_publisher" name="sf1_broadcaster" args="0.3 0.0 0.5 0 0 0 base_link sonar_f_0" />
<node pkg="tf2_ros" type="static_transform_publisher" name="sf2_broadcaster" args="0.0 0.3 0.5 1.57 0 0 base_link sonar_f_1" />
<node pkg="tf2_ros" type="static_transform_publisher" name="sf3_broadcaster" args="0.0 -0.3 0.5 -1.57  0 0 base_link sonar_f_2" />
<node pkg="tf2_ros" type="static_transform_publisher" name="sf4_broadcaster" args="-0.3 0.0 0.5 3.14  0 0  base_link sonar_f_3" />

<!-- CostMap with move_base -->
<node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
   <rosparam file="$(find deneigus)/map/costmap_common_params.yaml" command="load" ns="global_costmap" />
   <rosparam file="$(find deneigus)/map/costmap_common_params.yaml" command="load" ns="local_costmap" />
   <rosparam file="$(find deneigus)/map/local_costmap_params.yaml" command="load"/>
   <param name="local_costmap/width" value="10.0"/>
   <param name="local_costmap/height" value="10.0"/>
   <rosparam file="$(find deneigus)/map/global_costmap_params.yaml" command="load"/>
</node>

<!-- sudo apt-get install ros-noetic-robot_localization>
    robot_localization odom to base_link -->

<node pkg="robot_localization" type="ekf_localization_node"
      name="robot_localization_ekf_node_local"
      clear_params="true">
  <param name="frequency" value="10."/>
  <param name="sensor_timeout" value="0.2"/>
  <param name="transform_timeout" value="0.1"/>
  <param name="two_d_mode" value="true"/>
  <param name="publish_tf" value="true"/>
  <param name="map_frame" value="map"/>
  <param name="odom_frame" value="odom"/>
  <param name="base_link_frame" value="base_link"/>
  <param name="world_frame" value="odom"/>
  <param name="transform_time_offset" value="1e-7"/>

  <param name="odom0" value="/wheel/odometry"/>
  <param name="odom0_differential" value="false"/>
  <param name="odom0_relative" value="false"/>
  <rosparam param="odom0_config">[false, false, false,
                              false, false, false,
                              true, true, true,
                              false, false, true,
                              false, false, false]</rosparam>

  <remap from="odometry/filtered" to="odometry/filtered/local"/>
</node>

<!-- Robot localization map to base_link -->

<node pkg="robot_localization" type="ekf_localization_node"
      name="robot_localization_ekf_node_global"
      clear_params="true">
  <param name="frequency" value="10."/>
  <param name="sensor_timeout" value="0.2"/>
  <param name="transform_timeout" value="0.1"/>
  <param name="two_d_mode" value="true"/>
  <param name="publish_tf" value="true"/>
  <param name="map_frame" value="map"/>
  <param name="odom_frame" value="odom"/>
  <param name="base_link_frame" value="base_link"/>
  <param name="world_frame" value="map"/>
  <param name="transform_time_offset" value="1e-7"/>

  <param name="imu0" value="/imu/data"/>
  <param name="imu0_differential" value="false"/>
  <param name="imu0_relative" value="false"/>
  <rosparam param="imu0_config">[false, false, false,
                              true, true, true,
                              false, false, false,
                              false, false, false,
                              false, false, false]</rosparam>

  <param name="odom0" value="/wheel/odometry"/>
  <param name="odom0_differential" value="false"/>
  <param name="odom0_relative" value="false"/>
  <rosparam param="odom0_config">[false, false, false,
                              false, false, false,
                              true, true, true,
                              false, false, true,
                              false, false, false]</rosparam>

  <param name="odom1" value="/odometry/gps"/>
  <param name="odom1_differential" value="false"/>
  <param name="odom1_relative" value="false"/>
  <rosparam param="odom1_config">[true, true, false,
                              false, false, false,
                              false, false, false,
                              false, false, false,
                              false, false, false]</rosparam>

  <remap from="odometry/filtered" to="odometry/filtered/global"/>
</node>

<!-- navsat_transform_node
<param name="wait_for_datum" value="true"/>
  <rosparam param="datum">[45.37767355737077, -71.92495310609306, 0.0]</rosparam>
-->
<node pkg="robot_localization" type="navsat_transform_node" name="navsat_transform_node" respawn="true">
  <param name="transform_timeout" value="0.1"/>
  <param name="magnetic_declination_radians" value="0"/>
  <param name="navsat_transform_node's zero_altitude" value="true"/>
  <param name="broadcast_cartesian_transform" value="true"/>
  <param name="yaw_offset" value="0"/>
  <param name="publish_filtered_gps" value="true"/>
  <param name="wait_for_datum" value="false"/>

  <remap from="/odometry/filtered" to="/odometry/filtered/global"/>
</node>
</launch>
<!--
  <param name="odom0" value="/odometry/filtered"/>
  <param name="odom0_differential" value="false"/>
  <param name="odom0_relative" value="false"/>
  <rosparam param="odom0_config">[false, false, false,
                              false, false, false,
                              true, true, true,
                              false, false, true,
                              false, false, false]</rosparam>

  <param name="imu0" value="/imu/data"/>
  <param name="imu0_differential" value="false"/>
  <param name="imu0_relative" value="false"/>
  <rosparam param="imu0_config">[false, false, false,
                              true, true, true,
                              false, false, false,
                              false, false, false,
                              false, false, false]</rosparam>

  <param name="odom1" value="/gps/fix"/>
  <param name="odom1_differential" value="false"/>
  <param name="odom1_relative" value="false"/>
  <rosparam param="odom1_config">[true, true, false,
                              false, false, false,
                              false, false, false,
                              false, false, false,
                              false, false, false]</rosparam>
-->