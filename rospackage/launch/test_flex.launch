<launch>
  <arg name="has_web" default="0"/>
  <arg name="has_joy" default="1"/>
  <arg name="has_ard" default="0"/>

  <arg name="joy_port" default="/dev/input/js2" />
  <param name="joy_type" value="ps4" />

  <arg name="map_file" default="$(find deneigus)/map/map.yaml"/>
  <arg name="rviz_file" default="-d $(find deneigus)/rviz/simulations.rviz"/>

  <param name="/use_sim_time" value="true"/>

  <!-- rosbridge server -->
  <group if="$(arg has_web)">
    <include file="$(find rosbridge_server)/launch/rosbridge_websocket.launch" >
      <arg name="port" value="9090"/>
      <arg name="output" value="log"/>
    </include>
  </group>

  <!-- sonar2laserscan -->
  <node pkg="deneigus" type="sonar2laserscan.py" name="sonar2laserscan" output="screen" clear_params="true"/>

  <!-- python transformOdomMsg Node -->
  <node pkg="deneigus" type="transformOdomMsg.py" name="transformOdomMsg" output="screen" clear_params="true"/>

 <!-- pb2ros -->
  <group if="$(arg has_ard)">
    <node pkg="deneigus" type="pb2ros.py" name="pb2ros" output="screen" clear_params="true"/>
  </group>

 <!-- python executif Node -->
  <node pkg="deneigus" required="true" type="executif.py" name="executif" output="screen" clear_params="true"/>

<!-- joy node -->
  <group if="$(arg has_joy)">
    <node respawn="true" pkg="joy" type="joy_node" name="raw_joy" clear_params="true">
      <param name="dev" type="string" value="$(arg joy_port)" />
      <param name="deadzone" value="0.12" />
      <param name="default_trig_val" value="true" />
    </node>
  </group>

<!-- map_server -->
<node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" clear_params="true"/>

<!-- Static TF -->
<node pkg="tf2_ros" type="static_transform_publisher" name="sf0_broadcaster" args="0.34 -0.13 0.73484 0 0 0 base_link sonar_f_0" clear_params="true"/>
<node pkg="tf2_ros" type="static_transform_publisher" name="sf1_broadcaster" args="0.08 -0.32 0.73484 -0.9337 0 0 base_link sonar_f_1" clear_params="true"/>
<node pkg="tf2_ros" type="static_transform_publisher" name="sf2_broadcaster" args="-0.235 -0.32 0.73484 -1.8325 0 0 base_link sonar_f_2" clear_params="true"/>
<node pkg="tf2_ros" type="static_transform_publisher" name="sf3_broadcaster" args="-0.38 -0.16 0.73484 -2.8361 0 0 base_link sonar_f_3" clear_params="true"/>
<node pkg="tf2_ros" type="static_transform_publisher" name="sf4_broadcaster" args="-0.38 0.19 0.73484 2.574 0 0 base_link sonar_f_4" clear_params="true"/>
<node pkg="tf2_ros" type="static_transform_publisher" name="sf5_broadcaster" args="-0.22 0.32 0.73484 1.5446 0 0 base_link sonar_f_5" clear_params="true"/>
<node pkg="tf2_ros" type="static_transform_publisher" name="sf6_broadcaster" args="0.13 0.32 0.73484 0.6108 0 0 base_link sonar_f_6" clear_params="true"/>

<!-- Move base flex -->
<node pkg="mbf_costmap_nav" type="mbf_costmap_nav" respawn="false" name="move_base_flex" output="screen" clear_params="true">
    <rosparam file="$(find deneigus)/map/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find deneigus)/map/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find deneigus)/map/local_costmap_params.yaml" command="load"/>
    <rosparam file="$(find deneigus)/map/global_costmap_params.yaml" command="load"/>
    <rosparam file="$(find deneigus)/configs/navfn_params.yaml" command="load"/>
    <rosparam file="$(find deneigus)/configs/recovery_params.yaml" command="load"/>
    <rosparam file="$(find deneigus)/configs/teb_params.yaml" command="load"/>
</node>

<!-- Rviz -->
<node type="rviz" name="rviz" pkg="rviz" args="$(arg rviz_file)"/>

<!-- stateManagement -->
<node pkg="deneigus" type="stateManagement.py" name="stateManagement" output="screen" clear_params="true"/>

<!-- MBF TREE -->
<node pkg="deneigus" type="mbf_behavior_tree.py" name="mbf_behavior_tree" output="screen" clear_params="true"/>

<!-- Chute -->
<node pkg="deneigus" type="chute_node.py" name="chute_node" output="screen" clear_params="true"/>

<!-- Soufflante -->
<node pkg="deneigus" type="soufflante_node.py" name="soufflante_node" output="screen" clear_params="true"/>

<!-- ProgressMap -->
<node pkg="deneigus" type="progressMap.py" name="progressMap" output="screen" clear_params="true"/>

<!-- GlobalPlanner -->
<node pkg="deneigus" type="global_planner.py" name="global_planner" output="screen" clear_params="true"/>

<!-- robot_localization_ekf_node_local -->
<node pkg="robot_localization" type="ekf_localization_node" name="robot_localization_ekf_node_local" clear_params="true">
  <rosparam file="$(find deneigus)/configs/ekf_localization_local_params.yaml" command="load"/>
  <remap from="odometry/filtered" to="odometry/filtered/local"/>
</node>

<!-- robot_localization_ekf_node_global -->
<node pkg="robot_localization" type="ekf_localization_node" name="robot_localization_ekf_node_global" clear_params="true">
  <rosparam file="$(find deneigus)/configs/ekf_localization_global_params.yaml" command="load"/>
  <remap from="odometry/filtered" to="odometry/filtered/global"/>
</node>

<!-- navsat_transform_node -->
<node pkg="robot_localization" type="navsat_transform_node"  name="navsat_transform_node" respawn="true" clear_params="true">
  <rosparam file="$(find deneigus)/configs/navsat_transform_params.yaml" command="load"/>
  <remap from="/odometry/filtered" to="/odometry/filtered/global"/>
</node>

</launch>
